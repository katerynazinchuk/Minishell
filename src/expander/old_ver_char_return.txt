t_shell_type

/* char	*expand_value(char *raw, t_shell_type *shell)
{
	t_expand_type	exp;

	init_exp(&exp, raw);
	while (raw[exp->i])
	{
		if (raw[exp->i] == '$')
		{
			exp->i++;
			exp->var = extract_var(raw + exp->i, &exp->len_var);
			if (!exp->var)
				return (NULL)//what we need to free?
			exp->str = expand_var(exp->var, exp->len_var, shell);
			// if (!exp->str)
			// ??
			append_exp_str(exp);
			exp->i+=exp->len_var;
			//exp->j+=exp->len_var;
		}
		else
			res[exp->j] = raw[exp->i];
		exp->i++;
		exp->j++;
	}
	res[exp->j] = '\0';
	free_exp(exp);
	return (exp->res);
} */

char	*extract_var(char *raw, size_t *len)
{
	
	if (*raw == '{' && ft_strchr(raw, '}') != 0)
	{
		*len =(size_t)(raw - ft_strchr(raw, '}') + 1);//щоб урахувати {} бо треба змістити ітератор на всю довжину key_var
		return(ft_strndup(raw + 1, *len - 2));//щоб не забрати останній символ '}'
	}
	else
	{
		while (raw[*len] && !is_whitespace(raw[*len]))
			(*len)++;
		return(ft_strndup(raw, *(len + 1)));
	}
}

char	*expand_var(char *var, int len, t_env_list *env_list)
{
	t_env_type		*current;
	
	if (is_valid_var(var))
	{
		current = env_list->head;
		while(current)
		{
			if (ft_strncmp(current->key, var, len) == 0)
				return (ft_strdup(current->value));
			current = current->next;
		}
	}
	else if (ft_isdigit(*var))
		return(var + 1);
	// else if (*var == '?')
	// 	return(ft_itoa(shell->last_exit_status));//це алокейт
	return (ft_strdup(""));//неіснуюча змінна
}